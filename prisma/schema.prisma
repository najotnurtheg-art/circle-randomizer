// ---------- Generator ----------
generator client {
  provider = "prisma-client-js"
}

// ---------- Datasource ----------
datasource db {
  provider = "postgresql"  // change to mysql/sqlite if needed
  url      = env("DATABASE_URL")
}

// ---------- Enums ----------
enum Role {
  USER
  ADMIN
}

// Map to your existing Postgres enum type name for Item.tier.
// If your DB enum is named differently, change "Tier" below.
enum ItemTier {
  T50
  T100
  T200
  T500

  @@map("Tier")
}

// ---------- Models ----------
model User {
  id           String    @id @default(cuid())
  tgId         String?   @unique
  username     String?
  displayName  String?
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  wallet       Wallet?
}

model Wallet {
  userId   String   @id
  balance  Int      @default(0)
  user     User     @relation(fields: [userId], references: [id])
}

model Item {
  id           String    @id @default(cuid())
  name         String
  tier         ItemTier
  isActive     Boolean   @default(true)
  purchasable  Boolean   @default(false)
  imageUrl     String?
  createdAt    DateTime  @default(now())
}

model SpinState {
  id          String   @id          // 'global'
  status      String                // 'IDLE' | 'SPINNING'
  userId      String?
  username    String?
  wager       Int?
  segments    Json?
  resultIndex Int?
  spinStartAt DateTime?
  durationMs  Int?
  popup       Json?
  updatedAt   DateTime @updatedAt
}

model SpinLog {
  id        String   @id @default(cuid())
  userId    String
  username  String
  wager     Int
  prize     String
  createdAt DateTime @default(now())
}
